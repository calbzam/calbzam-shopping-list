{"version":3,"sources":["components/ItemForm.js","components/Item.js","services/ShoppingList.js","components/Search.js","components/Notification.js","index.js"],"names":["ItemForm","props","react_default","a","createElement","Fragment","onSubmit","addItem","value","name","onChange","onChangeName","type","Item","onClick","toggleButton","ShoppingList","axios","get","then","response","data","itemObject","post","id","delete","concat","isFiltered","items","filteredItem","filter","item","toLowerCase","includes","length","Notification","_ref","message","className","ReactDOM","render","_useState","useState","_useState2","Object","slicedToArray","setItems","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNumber","setNewNumber","_useState7","_useState8","filteredName","setFilteredName","_useState9","_useState10","errorMessage","setErrorMessage","useEffect","dataItems","itemsToShow","components_Notification","placeholder","event","target","components_ItemForm","preventDefault","number","undefined","find","setTimeout","catch","error","alert","onChangeNumber","map","components_Item","key","window","confirm","newPhonebook","document","getElementById"],"mappings":"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","file":"static/js/main.3db7919f.chunk.js","sourcesContent":["import React from 'react'\n\nconst ItemForm = (props) => {  \n\n    return (\n        <>\n         <form onSubmit={props.addItem}>\n            <div>\n                name:\n            <input\n                value={props.name}\n                onChange={props.onChangeName} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>    \n        </>\n    )\n}\n\nexport default ItemForm;\n","import React from 'react'\n\nconst Item = (props) => {\n  return (\n    <>\n      <p>\n        <div>{props.name}<button onClick={props.toggleButton}>delete</button></div>\n      </p> \n    </>\n  )\n}\n\nexport default Item;\n","import axios from 'axios'\nconst baseUrl = '/api/items'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = itemObject => {\n    const request = axios.post(baseUrl, itemObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request\n}\n\nexport default {getAll, create, remove}","const isFiltered = (items, filteredItem) => {\n    if (items.filter(item => item.name.toLowerCase().includes(filteredItem.toLowerCase())).length === items.length) {\n      return true\n    } else {\n      return false\n    }\n}\n\nexport default isFiltered","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport ItemForm from './components/ItemForm'\nimport Item from './components/Item'\nimport dataItems from './services/ShoppingList'\nimport isFiltered from './components/Search'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n  const [ items, setItems] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filteredName, setFilteredName ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    dataItems\n      .getAll()\n      .then(item => {\n        setItems(item)\n      })\n  }, [])\n\n  const inputFilterChange = (event) => {\n    setFilteredName(event.target.value)\n}\n\n  const HandleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const HandleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const AddItem= (event) => {\n    event.preventDefault()\n    const Item = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (items.find( item => item.name === newName) !== undefined ){\n      alert(`${Item.name} is already added to shopping list`)\n      return\n   } \n\n    dataItems\n      .create(Item)\n      .then(data => {\n        setItems(items.concat(data));\n        setNewName('');\n        setNewNumber('');\n        setErrorMessage(\n          `${Item.name} was successfuly added to the shopping list`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 4000)\n      })\n      .catch(error => {\n        setErrorMessage(\n          `cannot save item:${Item.name}`\n        )\n      })\n  }\n\n  const removeItem = (id, name) => {\n    if (window.confirm(`Do you really want to delete ${name} ?`)) {\n      dataItems\n        .remove(id)\n        .then(() => {\n          const newPhonebook = items.filter(item => item.id !== id)\n          setItems(newPhonebook)\n          setErrorMessage(\n            `${name} was successfuly removed from the phonebook`\n          )\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 4000)\n        })\n    }\n  }\n\n    const rows = () => itemsToShow.map(item =>\n      <Item\n      key={item.name}\n      name={item.name}\n      toggleButton={() => removeItem(item.id, item.name)}\n      />)\n\n    const itemsToShow =  isFiltered(items, filteredName) ? items : items.filter(item => item.name.toLowerCase().includes(filteredName.toLowerCase()))\n\n\n  return (\n    <div>\n      <h2>Shopping List</h2>\n      <Notification message={errorMessage} />\n      <div>\n          filter shown with: <input value={filteredName} placeholder=\"Search a name here\" onChange={inputFilterChange}/>\n      </div>\n      <h3>Add a new:</h3>\n      <ItemForm addItem={AddItem} name={newName} onChangeName={HandleNameChange} number={newNumber} onChangeNumber={HandleNumberChange}/>\n      <h2>Items</h2>\n      <div>\n        {rows()}\n      </div>\n    </div>\n  )\n}\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}